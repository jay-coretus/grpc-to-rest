syntax = "proto3";
package userservice;

import "google/protobuf/struct.proto";

service UserService {
  rpc SignUp(SignupUser) returns (UsersResponse) {}
  rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse) {}
  rpc UpdateOrganization(UpdateOrganizationRequest) returns (MessageResponse) {}
  rpc ViewOrganization(ViewOrganizationRequest) returns (ViewOrganizationResponse) {}
  rpc DeleteOrganization(DeleteOrganizationRequest) returns (MessageResponse) {}
  rpc UpdateProfile(UpdateProfileRequest) returns (ActionResponse) {}
  rpc UpdateEmail(UpdateEmailRequest) returns (ActionResponse) {}
  rpc UpdatePassword(UpdatePasswordRequest) returns (ActionResponse) {}
  rpc DeleteUser(DeleteUserRequest) returns (ActionResponse) {}
  rpc ChangeProfilePicture(ChangeProfilePictureRequest) returns (ActionResponse);
  rpc SocialSignUp(SocialUser) returns (UsersResponse) {}
  rpc VerifyInvitation(VerifyInvitationReq) returns (VerifyInvitationRes) {}
  rpc SignIn(SignInReq) returns (ActionResponse) {}
  rpc DisplayUser(DisplayUserRequest) returns (DisplayUserResponse) {}
  rpc RemoveUser(RemoveUserRequest) returns (MessageResponse) {}
  rpc RemoveService(RemoveServiceRequest) returns (MessageResponse) {}
  rpc AssignService(AssignServiceRequest) returns (MessageResponse) {}
  rpc UpdateOrganizationRole(UpdateOrganizationRoleRequest) returns (MessageResponse) {}
  rpc UpdateServiceRole(UpdateServiceRoleRequest) returns (MessageResponse) {}

  rpc ViewProfile(Empty) returns (ViewProfileResponse);
  rpc CreateInvitation(CreateInvitationRequest) returns (ActionResponse) {}
  rpc DisplayInvitation(Empty) returns (DisplayInvitationResponse) {}
  rpc DeleteInvitation(DeleteInvitationRequest) returns (ActionResponse) {}
  rpc ResetPassword(ResetPasswordReq) returns (ActionResponse) {}
  rpc ForgotPassword(ForgotPasswordReq) returns (ActionResponse) {}
  rpc SetPassword(ResetPasswordReq) returns (ActionResponse) {}
  rpc ChangePassword(ChangePasswordReq) returns (ActionResponse) {}
  rpc VerifyUser(VerifyUserRequest) returns (ActionResponse) {}
  rpc VerifyEmail(VerifyEmailRequest) returns (ActionResponse) {}
  rpc Services(EmptyRequest) returns (ServicesResponse){}
}

message User {
  string first_name = 1;
  string last_name = 2;
  string email = 3;
  string password = 4;
  string country_code = 5;
  string phone = 6;
  string user_id = 7;
}

message UserDetail {
  string profile_picture_path = 1;
}

message ViewProfileResponse {
  User user = 1;
  UserDetail user_detail = 2;
}

message SocialUser {
  string first_name = 1;
  string last_name = 2;
  string email = 3;
  string password = 4;
  string country_code = 5;
  string phone = 6;
  string platform = 7;
  string code = 8;
}

message Organization {
  string name = 1;
  string domain = 2;
  string time_zone = 3;
  string country = 4;
  string id = 5;
  string created_by = 6;
  string status = 7;
}

message OrganizationDetails {
  string profile_picture = 1;
  string address = 2;
  string state = 3;
  string city = 4;
  string postal_code = 5;
  string website_url = 6;
  google.protobuf.Struct social_url = 7;
  string org_id = 8;
}

message CreateOrganization{
  string name = 1;
  string domain = 2;
  string time_zone = 3;
  string country = 4;

}

message UpdateOrganization{
  string name = 1;
  string domain = 2;
  string time_zone = 3;
}


message UpdateOrganizationDetails {
  bytes profile_picture = 1;
  string address = 2;
  string state = 3;
  string city = 4;
  string postal_code = 5;
  string website_url = 6;
  map<string, string> social_url = 7;
}

message ViewOrganization {
  Organization organization = 1;
  OrganizationDetails organization_details = 2;
}
message CreateOrganizationRequest{
  CreateOrganization organization = 1;
}

message CreateOrganizationResponse{
  string org_id = 1;
  string message = 2;
}

message UpdateOrganizationRequest {
  UpdateOrganization organization = 1;
  UpdateOrganizationDetails organization_details = 2;
}

message ViewOrganizationRequest{
}

message ViewOrganizationResponse{
  repeated ViewOrganization view_organization = 1;
}

message DeleteOrganizationRequest{
  string name = 1;
  string password = 2;
}

message UsersResponse {
  string message = 1;
  string user_id = 2;
}


message MessageResponse{
  string message = 1;
}

message UpdateProfileRequest {
  User user = 1;
}

message UpdateEmailRequest {
  string new_email = 1;
}

message UpdatePasswordRequest {
  string new_password = 1;
  string current_password = 2;
}

message DeleteUserRequest {
  string password = 1;
}

message ChangeProfilePictureRequest {
  bytes picture_data = 1;
}

message ActionResponse {
  bool success = 1;
  string message = 2;
}
message VerifyInvitationReq {
  string token = 1;
  string first_name = 2;
  string last_name = 3;
  string password = 4;
  string country_code = 5;
  string phone = 6;
}

message VerifyInvitationRes {
  InvitationResponse invitation = 1;
  string message = 2;
  string domain = 3;
}
message SignInReq{
  string email = 1;
  string password = 2;
}

message CreateInvitationRequest {
  repeated string invitee_email_ids = 1;
}

message InvitationResponse {
  string id = 1;
  string org_id = 2;
  string invitee_email_id = 3;
  string status = 4;
  string created_by = 5;
}

message DisplayInvitationResponse {
  repeated InvitationResponse invitation_list = 1;
}

message DeleteInvitationRequest {
  string invitee_email_id = 1;
}

message DisplayInvitationRequest {
  optional string org_id = 1; // Not needed
}
message DisplayUser{
  string user_id = 1;
  string org_id = 2;
  string role_name = 3;
  string first_name = 4;
  string last_name = 5;
  string email_id = 6;
  string status = 7;
}

message DisplayUserRequest{

}

message AssignServiceRequest{
  string user_id = 1;
  string service_id = 2;
  string role_name = 3;
}

message DisplayUserResponse{
  repeated DisplayUser display_user = 1;
}

message  RemoveUserRequest{
  string user_id = 1;
}

message RemoveServiceRequest{
  string service_id = 1;
  string user_id = 2;
}


message UpdateOrganizationRoleRequest{
  string user_id = 1;
  string role_name = 2;
}

message UpdateServiceRoleRequest{
  string user_id = 1;
  string role_name = 2;
  string service_id = 3;
}


message Empty {}

message  ResetPasswordReq{
  string token = 1;
  string new_password = 2;
  string confirm_password = 3;
}
message ChangePasswordReq{
  string current_password = 1;
  string new_password = 2;
  string confirm_password = 3;
}
message VerifyUserRequest{
  string token = 1;
}
message ForgotPasswordReq{
  string email = 1;
}

message VerifyEmailRequest{
  string token = 1;
}

message SignupUser {
  string first_name = 1;
  string last_name = 2;
  string email = 3;
  string password = 4;
  string country_code = 5;
  string phone = 6;
  string confirm_password = 7;
}


message EmptyRequest{

}

message ServicesResponse {
  repeated Service services = 1;  // Change from 'Service service' to 'repeated Service services'
}

message Service {
  string service_id = 1;
  string service_name = 2;
  string icon_url = 3;
  string short_description = 4;
  repeated string features = 5;
}